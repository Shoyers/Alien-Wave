1. Setup du projet
- Installation de pygame et dépendances
- Structure des dossiers (src, assets, utils)
- Configuration de base pygame (fenêtre, FPS)
- Initialisation du système audio (mixer)

2. Core Mechanics
- Système de mouvement ZQSD avec collision aux bords
- Système de tir à la souris avec cooldown
- Gestion des projectiles et leurs collisions
- Système de score
- Système de vagues
- Système de bouclier défensif :
  * Activation au clic droit
  * Durée limitée
  * Cooldown entre les utilisations
  * Indicateur visuel de l'état
  * Barre de cooldown dans le HUD

3. Système d'Ennemis
- Spawn system sur les bords de l'écran
- Pathfinding vers le joueur
- Deux types d'ennemis :
  * Ennemi basique (corps à corps)
  * Ennemi tireur (distance)
- Patterns de mouvement et d'attaque
- Scaling de difficulté par vague
- Barre de vie au-dessus des ennemis
  * Affichage dynamique des PV
  * Couleur rouge/verte

4. Interface Utilisateur
- Menu Manager :
  * Gestion centralisée des menus
  * Méthodes communes (overlay, titres, textes)
  * Menus : principal, pause, paramètres, game over
  * Gestion des boutons et interactions
- HUD en temps réel
- Système de pause
- Écran game over

5. Effets Visuels
- Système de particules pour les tirs
- Traînées lumineuses des projectiles
- Effets de "glow" sur les entités
- Animation de mort des ennemis
- Fond étoilé dynamique
- Effets rétro
- Rotation du vaisseau selon la souris

6. Sound Design
- Sons des tirs (joueur et ennemis)
- Sons des impacts et dégâts
- Son de mort des ennemis
- Musique de fond
- Système de gestion du volume
- Son activable/désactivable

7. Sprites et Assets
- Sprites du joueur avec rotation
- Sprites des ennemis
- Logo du jeu
- Interface graphique cohérente